{"ast":null,"code":"var _jsxFileName = \"/Users/garybuchik/code/homework/HW-React/reactclick/src/App.js\";\nimport React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport FriendCard from \"./components/FriendCard\";\nimport friends from \"./friends.json\";\nlet score = 0;\nlet highScore = 0;\nlet clickMessage = \"play the game\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      score,\n      highScore,\n      clickMessage\n    };\n\n    this.handleClick = id => {\n      const friends = this.state.friends;\n      const clickedMatch = friends.filter(friend => friend.id === id);\n\n      if (clickedMatch[0].clicked) {\n        score = 0;\n        clickMessage = \"You already clicked that one, start over!\";\n\n        for (let i = 0; i < friends.length; i++) {\n          friends[i].clicked = false;\n        }\n\n        this.setState({\n          clickMessage\n        });\n        this.setState({\n          score\n        });\n        this.setState({\n          friends\n        });\n      } else if (score < 9) {\n        clickedMatch[0].clicked = true;\n        score++;\n        clickMessage = \"Keep Going\";\n      }\n\n      if (score > highScore) {\n        highScore = score;\n        this.setState({\n          highScore\n        });\n        friends.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          friends\n        });\n        this.setState({\n          score\n        });\n        this.setState({\n          clickMessage\n        });\n      } else {\n        clickedMatch[0].clicked = true;\n        score = 0;\n        clickMessage = \"you did it!\";\n        highScore = 9;\n        this.setState({\n          highScore\n        });\n\n        for (let i = 0; i < friends.length; i++) {\n          friends[i].clicked = false;\n        }\n\n        friends.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          friends\n        });\n        this.setState({\n          score\n        });\n        this.setState({\n          clickMessage\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Clicky Game\"), React.createElement(\"h3\", {\n      className: \"scoreSummary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.clickMessage), React.createElement(\"h3\", {\n      className: \"scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Correct Guesses: \", this.state.correctGuesses, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Best Score: \", this.state.bestScore), friends.map(person => React.createElement(FriendCard, Object.assign({\n      key: person.id\n    }, person, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garybuchik/code/homework/HW-React/reactclick/src/App.js"],"names":["React","Wrapper","Title","FriendCard","friends","score","highScore","clickMessage","App","Component","state","handleClick","id","clickedMatch","filter","friend","clicked","i","length","setState","sort","a","b","Math","random","render","correctGuesses","bestScore","map","person"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport FriendCard from \"./components/FriendCard\";\nimport friends from \"./friends.json\";\n\nlet score = 0\nlet highScore = 0\nlet clickMessage = \"play the game\"\nclass App extends React.Component {\n  state = {\n    friends,\n    score,\n    highScore,\n    clickMessage,\n  };\n\n  handleClick = id => {\n    const friends = this.state.friends\n    const clickedMatch = friends.filter(friend => friend.id === id);\n    if (clickedMatch[0].clicked) {\n      score = 0\n      clickMessage = \"You already clicked that one, start over!\"\n\n      for (let i = 0; i < friends.length; i++) {\n        friends[i].clicked = false;\n      }\n\n      this.setState({ clickMessage });\n      this.setState({ score });\n      this.setState({ friends });\n\n    }\n    else if (score < 9) {\n      clickedMatch[0].clicked = true;\n      score++;\n      clickMessage = \"Keep Going\";\n\n    }\n\n    if (score > highScore) {\n      highScore = score;\n      this.setState({ highScore });\n\n\n\n\n\n\n      friends.sort(function (a, b) { return 0.5 - Math.random() });\n      this.setState({ friends });\n      this.setState({ score });\n      this.setState({ clickMessage });\n\n    } else {\n      clickedMatch[0].clicked = true;\n      score = 0;\n      clickMessage = \"you did it!\";\n      highScore = 9\n      this.setState({ highScore });\n\n\n      for (let i = 0; i < friends.length; i++) {\n        friends[i].clicked = false;\n      }\n\n      friends.sort(function (a, b) { return 0.5 - Math.random() });\n\n      this.setState({ friends });\n      this.setState({ score });\n      this.setState({ clickMessage });\n\n\n\n\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        <h3 className=\"scoreSummary\">\n                    {this.state.clickMessage}\n                </h3>\n                <h3 className=\"scores\">\n                    Correct Guesses: {this.state.correctGuesses} \n                    <br />\n                    Best Score: {this.state.bestScore} \n                </h3>\n\n\n\n\n        {friends.map(person => <FriendCard key={person.id} {...person} />)}\n\n      </Wrapper>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}